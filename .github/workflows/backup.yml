name: Backup Mongo

on:
  schedule: # Minute Hour DayOfMonth MonthOfYear DayOfWeek
    - cron: '0 10 * * *' # Greenwich time: Will run every day at 4 am Mexico City time

jobs:
  cronjob:
    runs-on: ubuntu-latest
    env:
      mongoDB: spotify
      backDir: backup-folder
    steps:
    - uses: LuisEnMarroquin/setup-ssh-action@v2.0.0
      with:
        ORIGIN: spotify.marroquin.dev
        SSHKEY: ${{ secrets.SSH_SERVER }}
        NAME: production
        PORT: ${{ secrets.SSH_PORT }}
        USER: ${{ secrets.SSH_USER }}
    - name: Dumping database with mongodump gzip and compressing with tar.gz
      run: |
        ssh production docker exec -t spotify_mongo mongodump --gzip -d ${{ env.mongoDB }} -o ${{ env.backDir }}
        ssh production docker exec -t spotify_mongo tar -czvf spotify-mongo.tar.gz ${{ env.backDir }}
    - name: Moving tar.gz from container to server
      run: |
        ssh production docker cp spotify_mongo:/spotify-mongo.tar.gz ./
        ssh production docker exec -t spotify_mongo rm -rf ${{ env.backDir }} spotify-mongo.tar.gz
    - name: Moving tar.gz from server to GitHub Runner
      run: |
        scp production:~/spotify-mongo.tar.gz ./
        ssh production 'rm ~/spotify-mongo.tar.gz'
        tar -xvf spotify-mongo.tar.gz
    - uses: LuisEnMarroquin/setup-ssh-action@v2.0.0
      with:
        ORIGIN: gitlab.com
        SSHKEY: ${{ secrets.SSH_GITLAB }}
    - name: Downloading repo from GitLab
      run: |
        ssh -T git@gitlab.com || true
        git config --global user.name "LuisEnMarroquin"
        git config --global user.email "mluis651@gmail.com"
        git clone --depth 1 git@gitlab.com:LuisEnMarroquin/spotify-sync.git spotify-repo
    - name: Copy backup files to repo
      working-directory: spotify-repo
      run: |
        cd .. && ls
        cp -a ../${{ env.backDir }}/${{ env.mongoDB }}/. ./
        ls
        git add .
        git commit --allow-empty -m "Backup at $(date)"
        git push -u origin master
